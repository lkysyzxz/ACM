#include<iostream>
#include<string>
#include<algorithm>
#include<cstring>
#include<set>
#include<queue>
#include<cstdio>
#include<vector>
#include<cmath>
using namespace std;
int a, b, n;
int gc;
int gcd(int x, int y)
{
	return (x%y == 0)?y:gcd(y, x%y);
}
vector<int> commonD;
int main()
{
	cin >> a >> b >> n;
	gc = gcd(a, b);
	for (int i = 1; i*i <= gc; i++)
	{
		if (gc%i == 0)
		{
			commonD.push_back(i);
			if (i*i != gc)
				commonD.push_back(gc / i);
		}
	}

	sort(commonD.begin(), commonD.end());
	int low;
	int hight;
	for (int i = 1; i <= n; i++)
	{
		cin >> low >> hight;
		int id = upper_bound(commonD.begin(), commonD.end(), hight) - commonD.begin() - 1;
		if (commonD[id] >= low&&commonD[id] <= hight)
			cout << commonD[id] << endl;
		else
			cout << -1 << endl;
	}
	return 0;
}
